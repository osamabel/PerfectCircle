services:
  # PostgreSQL Database (same as production)
  db:
    image: postgres:15-alpine
    container_name: perfectcircle-db-dev
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
      - ./schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
      - ./seed.sql:/docker-entrypoint-initdb.d/02-seed.sql
    ports:
      - "5432:5432"
    networks:
      - perfectcircle-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Next.js Development Server with Hot Reloading
  app:
    image: node:20-alpine
    container_name: perfectcircle-app-dev
    working_dir: /app
    command: sh -c "npm install && npm run dev -- --hostname 0.0.0.0"
    ports:
      - "3000:3000"
    env_file:
      - .env
    environment:
      - DATABASE_URL=${DOCKER_DATABASE_URL}
    volumes:
      - .:/app
      - node_modules_cache:/app/node_modules
      - next_cache:/app/.next
    depends_on:
      db:
        condition: service_healthy
    networks:
      - perfectcircle-network
    # Enable proper file watching
    stdin_open: true
    tty: true

volumes:
  postgres_data_dev:
  node_modules_cache:
  next_cache:

networks:
  perfectcircle-network:
    driver: bridge
